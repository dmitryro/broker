import sys
from setuptools import setup, find_packages

if sys.version_info >= (3, 4):
    # Python 3.4 and newer: asyncio is now part of the stdlib
    pass

try:
    from setuptools import setup
    SETUPTOOLS = True
except ImportError:
    SETUPTOOLS = False
    # Use distutils.core as a fallback.
    # We won't be able to build the Wheel file on Windows.
    from distutils.core import setup

requirements = [
    "colorlog>=3.1.4",
    "fastavro<=0.22.3",
    "simple-settings",
    "faust>=1.10.4",
    "python-schema-registry-client",
    "typing-extensions==3.7.4.1",
]

with open("README.md") as fp:
    long_description = fp.read()

install_options = {
    "name": "broker",
    "version": "0.1",
    "description": "Faust example with Docker",
    "long_description": """
                        Example running Faust with Docker Compose (zookeeper, kafka and schema-registry)
                        """,
    "classifiers":[
        "Programming Language :: Python",
    ],
    "author":"Dmitry Roitman",
    "author_email":"dmitryro@gmail.com",
    "url":"",
    "packages":find_packages(),
    "include_package_data":True,
    "zip_safe": False,
    "install_requires": requirements,
    "tests_require":[],
    "setup_requires":[],
    "dependency_links":[],
    "py_modules": ["broker"],
}

if SETUPTOOLS:
    install_options["install_requires"] = requirements

setup(**install_options)
